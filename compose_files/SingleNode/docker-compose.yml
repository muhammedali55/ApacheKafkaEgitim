version: '3.1'

networks:
  app-tier:
    driver: bridge

services:
  kafka-0-s:
    image: docker.io/bitnami/kafka:3.7
    networks:
      - app-tier
    ports:
      - "9092:9092"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0-s:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.1.80:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

    volumes:
      - kafka_0_data_s:/bitnami/kafka

  kafka-ui-s:
    image: "provectuslabs/kafka-ui:latest"
    networks:
      - app-tier
    container_name: "kafka-ui-s"
    ports:
      - "8080:8080"
    restart: "always"
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=wizard_test
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=192.168.1.80:9092
    depends_on:
      - kafka-0-s

volumes:
  kafka_0_data_s:
    driver: local

